model{
  
  for (i in 1:N){
    # observed variables
    ######################################################
    # # factor model
    # lavaan code
    # I  =~ 1*dep1+1*dep2+1*dep3+1*dep4+1*dep5+1*dep6
    # S1 =~ (-2.5)*dep1+(-1.5)*dep2+(-0.5)*dep3
    # S2 =~ 0.5*dep4+1.5*dep5+2.5*dep6
    ######################################################
    muy[i,1] <- eta[i,1]-2.5*eta[i,2];
    muy[i,2] <- eta[i,1]-1.5*eta[i,2];
    muy[i,3] <- eta[i,1]-0.5*eta[i,2];
    muy[i,4] <- eta[i,1]+0.5*eta[i,3];
    muy[i,5] <- eta[i,1]+1.5*eta[i,3];
    muy[i,6] <- eta[i,1]+2.5*eta[i,3];
    
    ######################################################
    #latent variables
    # this is a class-specific model (with group specific means).
    ######################################################
    mueta[i,1] <- beta0[1,C[i]]
    mueta[i,2] <- beta0[2,C[i]]
    mueta[i,3] <- beta0[3,C[i]]
  }
  
  
  
  #///////////////////////////////////
  #// distribution of y, NOT class-specific
  #///////////////////////////////////
  for(i in 1:N){
    for(k in 1:6) {
      y[i,k] ~ dnorm(muy[i,k],psiy[k]);
    }
  
    #///////////////////////////////////
    #// distribution of factors
    #// NOT group-specific
    #///////////////////////////////////
    eta[i,1:3] ~ dmnorm(mueta[i,1:3],psieta[1:3,1:3]);
   
    #///////////////////////////////////
    #// distribution of latent classes
    #///////////////////////////////////
    # latent classes
    C[i]~dcat(prob[1:2])
  
  }

  #///////////////////////////////////
  #// priors
  #///////////////////////////////////
  # regression coefficients 
  # with specific constraints
  beta0[1,1] ~ dnorm(0,0.01); # intercept (class 1)
  deltabeta ~ dnorm(0,0.01)I(,0); # difference between classes, forced >0
  beta0[1,2] <- beta0[1,1] + deltabeta
  
  # rest: has specific parallel structure but no further constraints
  beta0[2,1] ~ dnorm(0,0.01); 
  beta0[3,2] <- beta0[2,1]; # group 2 slope 2 == group 1 slope 1
  
  beta0[3,1] ~ dnorm(0,0.01); 
  beta0[2,2] <- beta0[3,1]; # group 2 slope 1 == group 1 slope 2
  
  #precisions
  for(k in 1:6){psiy[k] ~ dgamma(1,1);}
  psieta[1:3,1:3] ~ dwish(psi0[1:3,1:3],3);
  
  
  # logged mean of probability
  alpha ~ dnorm(0,0.01);
  # probabilities P(C=c)
  logit(eta2) <- alpha
  prob[1] <- eta2
  prob[2] <- 1-eta2

  #///////////////////////////////////
  # transformations
  #///////////////////////////////////
  for(k in 1:6){sigmay[k] <- 1/psiy[k]}
  sigmaeta[1:3,1:3] <- inverse(psieta[1:3,1:3])


  
}
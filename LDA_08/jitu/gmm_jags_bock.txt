model{
  
  for (i in 1:N){
    # observed variables
    muy[i,1] <- eta[i,1];
    muy[i,2] <- eta[i,1]+1*eta[i,2];
    muy[i,3] <- eta[i,1]+2*eta[i,2];
    muy[i,4] <- eta[i,1]+3*eta[i,2];
    muy[i,5] <- eta[i,1]+4*eta[i,2];
    muy[i,6] <- eta[i,1]+5*eta[i,2];
    
    #latent variables
    # class-specific
    mueta[i,1] <- beta0[1,C[i]]
    mueta[i,2] <- beta0[2,C[i]]
  }
  
  
  
  #///////////////////////////////////
  #// distribution of y, class-specific
  #///////////////////////////////////
  for(i in 1:N){
    for(k in 1:6) {
      y[i,k] ~ dnorm(muy[i,k],psiy[k,C[i]]);
    }
  
    #///////////////////////////////////
    #// distribution of factors, class-specific
    #///////////////////////////////////
    eta[i,1:2] ~ dmnorm(mueta[i,1:2],psieta[1:2,1:2,C[i]]);
    
    #///////////////////////////////////
    #// distribution of latent classes
    #///////////////////////////////////
    # latent classes
    C[i]~dcat(prob[1:2])
  
  }

  #///////////////////////////////////
  #// priors
  #///////////////////////////////////
  # regression coefficients in class 1 
  for(k in 1:2){
    beta0[k,1] ~ dnorm(0,0.01);
    beta0[k,2] <- beta0[k,1] + deltabeta[k]
  }
  
  # regression coefficients in class 2
  # differences in the intercepts (censored) and slopes
  deltabeta[1] ~ dnorm(0,0.01)I(0,);
  deltabeta[2] ~ dnorm(0,0.01);
  # this ensures that the average intercept in class 2 > class 1
  # only necessary for label-switching problem


  # logged mean of probability
  alpha ~ dnorm(0,0.01);
  
  #precisions
  for(k in 1:2){
    for(j in 1:6){
      psiy[j,k] ~ dgamma(1,1);
    }
  }
  
  for(k in 1:2){
    psieta[1:2,1:2,k] ~ dwish(psi0[1:2,1:2],2);
  }
  
  # probabilities P(C=c)
  logit(eta2) <- alpha
  prob[1] <- eta2
  prob[2] <- 1-eta2

  #///////////////////////////////////
  # transformations
  #///////////////////////////////////
  for(k in 1:2){
    for(j in 1:6){sigmay[j,k] <- 1/psiy[j,k]}
    sigmaeta[1:2,1:2,k] <- inverse(psieta[1:2,1:2,k])
  }
  
  
}